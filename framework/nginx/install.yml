---
- hosts: backend
  name: Install Nginx on Backend
  remote_user: "{{ ansible_user }}"
  become: true
  become_method: 'sudo'
  tasks:
  - name: Update apt-get repo and cache
    apt: update_cache=yes force_apt_get=yes cache_valid_time=3600
    become: true

  - name: Installs nginx web server
    apt: pkg=nginx update_cache=true
    become: true
    notify:
      - start nginx
  - name: NGINX- Copy default.conf file into Place
    copy: src=default.conf dest=/etc/nginx/conf.d/default.conf

  - name: NGINX- Copy example_ssl.conf into Place
    copy: src=example_ssl.conf dest=/etc/nginx/conf.d/example_ssl.conf

  - name: NGINX- Put The Nginx Conf file in Place - Keepalive Set Here
    copy: src=nginx.conf dest=/etc/nginx/nginx.conf

  - name: NGINX- Copy Backend Response Files
    copy: src=weather_country.response dest=/usr/share/nginx/html/weather_country.response

  - name: NGINX- Copy Large Backend Response File for use in RDAPI-12066
    copy: src=weather_country.response-large dest=/usr/share/nginx/html/weather_country.response-large

  - name: NGINX- Create directory /usr/share/nginx/html/backend_dir
    file: path=/usr/share/nginx/html/backend_dir state=directory mode=0755

  - name: NGINX- Copy Backend Response Files (/usr/share/nginx/html/backend_dir/atms)
    copy: src=weather_country.response dest=/usr/share/nginx/html/backend_dir/atms

  - name: NGINX- Create directory /usr/share/nginx/html/backend_ssldir
    file: path=/usr/share/nginx/html/backend_ssldir state=directory mode=0755

  - name: NGINX- Copy Backend Response Files (/usr/share/nginx/html/backend_ssldir/oauth)
    copy: src=weather_country.response dest=/usr/share/nginx/html/backend_ssldir/oauth

  - name: NGINX- Copy Backend Response Files (/usr/share/nginx/html/backend_ssl)
    copy: src=weather_country.response dest=/usr/share/nginx/html/backend_ssl

  - name: NGINX- Copy SSL cert.pem
    copy: src=cert.pem dest=/etc/nginx/cert.pem

  - name: NGINX- Copy SSL cert.key
    copy: src=cert.key dest=/etc/nginx/cert.key

  - name: NGINX- Copy security/limits.conf
    copy: src=limits.conf dest=/etc/security/limits.conf

  - name: NGINX- Copy sysctl.conf
    copy: src=sysctl.conf dest=/etc/sysctl.conf

  - name: NGINX- Set ip_nonlocal_bind in /etc/sysctl.conf file
    lineinfile: dest=/etc/sysctl.conf line='net.ipv4.ip_nonlocal_bind = 1' state=present

  - name: NGINX- Display Nginx Version Info
    shell: "/usr/sbin/nginx -V"
    register: nginx_ver

  - debug: var=nginx_ver.stdout_lines

  - name: Enable and Restart Service
    service: name=nginx enabled=yes state=restarted

  - name: NGINX- Show connected Ports - Looking for Open Ports
    command: netstat -ntlp
    register: netstat

  - debug: var=netstat.stdout_lines

  handlers:
  - name: start nginx
    service: name=nginx state=started